@using Microsoft.AspNetCore.Components.Web
@namespace AssetMonitoring.Web.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link type="text/css" rel="stylesheet" href="/css/bootstrap/bootstrap.min.css" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>
    <script src="_framework/blazor.server.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDpqcgMnKf1TnQPRQKNmlnUgqh_EI0t_Iw&v=3"></script>
    <script src="_content/BlazorGoogleMaps/objectManager.js"></script>
    <script>
         function OpenUrl(url) {
            window.location = url;
        }
        function ShowModal(modalId) {
            $('#' + modalId).modal('show');
        }
        function CloseModal(modalId) {
            $('#' + modalId).modal('hide');
        }
        function ShowInfo(message) {
            alert(message);
        }
        //gps location
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.watchPosition(showPosition);
                return "Success";
            } else {
                return "Geolocation is not supported by this browser.";
            }
        }
        function showPosition(position) {
            console.log("Latitude: " + position.coords.latitude +
                ", Longitude: " + position.coords.longitude);
            DotNet.invokeMethodAsync('AssetMonitoring.Web', 'UpdateLocationCaller', position.coords.latitude, position.coords.longitude);
        }
    </script>
</body>
</html>
