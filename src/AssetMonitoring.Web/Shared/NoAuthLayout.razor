@inherits LayoutComponentBase
@using Blazored.Toast.Configuration
@page "/auth/{Slug}"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavMgr
@inject IJSRuntime jsRuntime

<PageTitle>Asset Monitoring</PageTitle>

<BlazoredToasts Position="ToastPosition.BottomRight"
                Timeout="10"
                SuccessClass="success-toast-override"
                SuccessIconClass="fa fa-thumbs-up"
                ErrorIconClass="fa fa-bug" />
<MudThemeProvider />
<MudDialogProvider FullWidth="false"
                   MaxWidth="MaxWidth.Large"
                   CloseButton="true"
                   DisableBackdropClick="true"
                   NoHeader="false"
                   Position="DialogPosition.Center"
                   CloseOnEscapeKey="true" />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudIconButton Icon="@Icons.Material.Filled.Web" Color="Color.Inherit" Link="https://gravicode.com/" Target="_blank" />
       
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Asset Monitoring</MudText>
        </MudDrawerHeader>
        <CascadingValue Value="Slug">
            <NoAuthMenu ></NoAuthMenu>
        </CascadingValue>
    </MudDrawer>
    <MudMainContent>
        
        <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
            <ErrorBoundary>
                @Body
            </ErrorBoundary>
            <MudScrollToTop>
                <MudFab Color="Color.Tertiary" Icon="@Icons.Filled.ArrowCircleUp" />
            </MudScrollToTop>
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code{
     bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    [Parameter]
    public string Slug { get; set; } = "login";

    protected override void OnParametersSet()
    {
        /*
        // pull out the "Slug" parameter from the route data
        object slug = null;
        if ((this.Body.Target as RouteView)?.RouteData.RouteValues?.TryGetValue("Slug", out slug) == true)
        {
            //Slug = slug?.ToString();
        }
        */
    }
}